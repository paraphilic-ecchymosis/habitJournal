## Spring Configuration ##

# SPRING CONFIG (ConfigFileApplicationListener)
# spring.config.name= # config file name (default to 'application')
# spring.config.location= # location of config file

# # PROFILES
# spring.profiles.active= # comma list of active profiles

# # APPLICATION SETTINGS (SpringApplication)
# spring.main.sources=
# spring.main.web-environment= # detect by default
# spring.main.show-banner=true
# spring.main....= # see class for all properties

# # LOGGING
# logging.path=/var/logs
# logging.file=myapp.log
# logging.config= # location of config file (default classpath:logback.xml for logback)
# logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)
logging.level.root=WARN
logging.level.com.memorynotfound=DEBUG
# logging.level.org.springframework=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name=Persistence Journal
# spring.application.index=

# MVC
# spring.mvc.view.prefix=/templates/
# spring.mvc.view.suffix=.html

## TODO: Configure these. ##
# server.servlet.context-path=/ui
# server.servlet.session.cookie.name="UISESSION"

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# server.port=8080
server.port=8443
# server.address= #  bind to a specific NIC
# server.session-timeout= # session timeout in seconds
# server.context-path= # the context path, defaults to '/'
# server.servlet-path= # the servlet path, defaults to '/'
# server.ssl.client-auth= # want or need
server.ssl.key-alias=tomcat
server.ssl.key-password=password
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-type=PKCS12
# server.ssl.key-store-password=
# server.ssl.key-store-provider=
# server.ssl.protocol=TLS
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=
# server.tomcat.access-log-pattern= # log pattern of the access log
# server.tomcat.access-log-enabled=false # is access logging enabled
# server.tomcat.internal-proxies=10\.\d{1,3}\.\d{1,3}\.\d{1,3}|\
#         192\.168\.\d{1,3}\.\d{1,3}|\
#         169\.254\.\d{1,3}\.\d{1,3}|\
#         127\.\d{1,3}\.\d{1,3}\.\d{1,3} # regular expression matching trusted IP addresses
# server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header
# server.tomcat.port-header= # front end proxy port header
# server.tomcat.remote-ip-header=x-forwarded-for
# server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
# server.tomcat.background-processor-delay=30; # in seconds
# server.tomcat.max-threads = 0 # number of threads in protocol handler
# server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding

# SPRING MVC (HttpMapperProperties)
# http.mappers.json-pretty-print=false # pretty print JSON
# http.mappers.json-sort-keys=false # sort keys
# spring.mvc.locale= # set fixed locale, e.g. en_UK
# spring.mvc.date-format= # set fixed date format, e.g. dd/MM/yyyy
# spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
# spring.view.prefix= # MVC view prefix
# spring.view.suffix= # ... and suffix
# spring.resources.cache-period= # cache timeouts in headers sent to browser
# spring.resources.add-mappings=true # if default mappings should be added

# SECURITY (SecurityProperties)
# spring.security.user.name=user
# spring.security.user.password=password
# spring.security.user.role=USER # role assigned to the user
# spring.security.require-ssl=false # advanced settings ...
# spring.security.enable-csrf=false
# spring.security.basic.enabled=true
# spring.security.basic.realm=Spring
# spring.security.basic.path= # /**
# spring.security.headers.xss=false
# spring.security.headers.cache=false
# spring.security.headers.frame=false
# spring.security.headers.contentType=false
# spring.security.headers.hsts=all # none / domain / all
# spring.security.sessions=stateless # always / never / if_required / stateless
# spring.security.ignored=false
    
# spring.security.oauth2.client.accessTokenUri="https://oauth2.googleapis.com/token"
# spring.security.oauth2.client.userAuthorizationUri="https://www.googleapis.com/oauth2/v1/certs"
spring.security.oauth2.client.registration.google.client-id=1023249508114-uoor6gu5mgceval4mt5s5hokvr1969mt.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=2aP3VK2CUDoD0GFIlSdEYalx
# TODO: Redirect URI
security.oauth2.resource.userInfoUri="http://localhost:8081/auth/user/me"

# THYMELEAF (ThymeleafAutoConfiguration)
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
## From spring.io common props but is unrecognized?
# spring.thymeleaf.content-type=text/html
# spring.thymeleaf.cache=false

# TODO: Message properties
#spring.messages.basename="messages"

# Actuator #
# Unidentified?
# management.endpoints.web.exposure.include=info,health,metrics,loggers,beans,mappings
# management.endpoint.health.show-details=always

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# spring.datasource.name= # name of the data source
# spring.datasource.initialize=true # populate using data.sql
# spring.datasource.schema= # a schema (DDL) script resource reference
# spring.datasource.data= # a data (DML) script resource reference
# spring.datasource.sqlScriptEncoding= # a charset for reading SQL scripts
# spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
# spring.datasource.continueOnError=false # continue even if can't be initialized
# spring.datasource.separator=; # statement separator in SQL initialization scripts
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:bugtracker
spring.datasource.username=sa
# spring.datasource.password=
# spring.datasource.jndi-name # For JNDI lookup (class, url, username & password are ignored when set)
# spring.datasource.max-active=100 # Advanced configuration...
# spring.datasource.max-idle=8
# spring.datasource.min-idle=8
# spring.datasource.initial-size=10
# spring.datasource.validation-query=
# spring.datasource.test-on-borrow=false
# spring.datasource.test-on-return=false
# spring.datasource.test-while-idle=
# spring.datasource.time-between-eviction-runs-millis=
# spring.datasource.min-evictable-idle-time-millis=
# spring.datasource.max-wait=

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2


## User GSuite Definitions ## 
# gsuite.authorization.user="user"
# gsuite.authorization.access="offline"
# gsuite.authorization.receiver.port=8888
    
    ## Spreadsheet Definitions ## 
        ## Configuration ##
        ## Needs to be user generated? ##
        gsuite.spreadsheet.id="1SrCbIbgXSCtM2jz2x1qC7dmiVjVQVf1M_fWpuBIs_hc"
    
        ## Journal Sheet ##
            # Must be non-negative
            journal.sheet.id=1
            # Name of the sheet
            journal.sheet.title="journal"
            # TODO:Zero index?
            journal.sheet.index=0
            # Leave as default
            journal.sheet.type="GRID"
            # Sheet Visiblity
            journal.sheet.hidden=false
            # TODO: Seems unnecessary, hopefully.
            journal.sheet.tabColorStyle=null
            # Leave false
            journal.sheet.righttoleft=false
            ## GridProperties ##
            # TODO: rowCount Initially  want no limit, but potentially limit
            # to month timeframe later
            journal.sheet.grid.properties.rowCount=default?
            journal.sheet.grid.properties.columnCount=3
            journal.sheet.grid.properties.frozenRowCount=0
            journal.sheet.grid.properties.frozenColumnCount=3
            journal.sheet.grid.properties.hideGridlines=false
            journal.sheet.grid.properties.rowGroupControlAfter=false
            journal.sheet.grid.properties.columnGroupControlAfter=false

            journal.sheet.grid.start.row=1
            journal.sheet.grid.start.column=1
            journal.sheet.grid.column.date.header="Date"
            journal.sheet.grid.column.behavior.header="Behavior"
            journal.sheet.grid.column.units.header="Units Completed"
    










        gsuite.spreadsheet.journal.range="journal!A3:D"

gsuite.credentials.file=./credentials.json

